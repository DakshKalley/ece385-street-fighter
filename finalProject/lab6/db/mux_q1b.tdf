--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" LPM_SIZE=6 LPM_WIDTH=3 LPM_WIDTHS=3 data result sel
--VERSION_BEGIN 18.1 cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 15 
SUBDESIGN mux_q1b
( 
	data[17..0]	:	input;
	result[2..0]	:	output;
	sel[2..0]	:	input;
) 
VARIABLE 
	result_node[2..0]	: WIRE;
	sel_ffs_wire[2..0]	: WIRE;
	sel_node[2..0]	: WIRE;
	w_data195w[7..0]	: WIRE;
	w_data215w[3..0]	: WIRE;
	w_data216w[3..0]	: WIRE;
	w_data264w[7..0]	: WIRE;
	w_data284w[3..0]	: WIRE;
	w_data285w[3..0]	: WIRE;
	w_data331w[7..0]	: WIRE;
	w_data351w[3..0]	: WIRE;
	w_data352w[3..0]	: WIRE;
	w_sel217w[1..0]	: WIRE;
	w_sel286w[1..0]	: WIRE;
	w_sel353w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[2..2] & (((w_data352w[1..1] & w_sel353w[0..0]) & (! (((w_data352w[0..0] & (! w_sel353w[1..1])) & (! w_sel353w[0..0])) # (w_sel353w[1..1] & (w_sel353w[0..0] # w_data352w[2..2]))))) # ((((w_data352w[0..0] & (! w_sel353w[1..1])) & (! w_sel353w[0..0])) # (w_sel353w[1..1] & (w_sel353w[0..0] # w_data352w[2..2]))) & (w_data352w[3..3] # (! w_sel353w[0..0]))))) # ((! sel_node[2..2]) & (((w_data351w[1..1] & w_sel353w[0..0]) & (! (((w_data351w[0..0] & (! w_sel353w[1..1])) & (! w_sel353w[0..0])) # (w_sel353w[1..1] & (w_sel353w[0..0] # w_data351w[2..2]))))) # ((((w_data351w[0..0] & (! w_sel353w[1..1])) & (! w_sel353w[0..0])) # (w_sel353w[1..1] & (w_sel353w[0..0] # w_data351w[2..2]))) & (w_data351w[3..3] # (! w_sel353w[0..0])))))), ((sel_node[2..2] & (((w_data285w[1..1] & w_sel286w[0..0]) & (! (((w_data285w[0..0] & (! w_sel286w[1..1])) & (! w_sel286w[0..0])) # (w_sel286w[1..1] & (w_sel286w[0..0] # w_data285w[2..2]))))) # ((((w_data285w[0..0] & (! w_sel286w[1..1])) & (! w_sel286w[0..0])) # (w_sel286w[1..1] & (w_sel286w[0..0] # w_data285w[2..2]))) & (w_data285w[3..3] # (! w_sel286w[0..0]))))) # ((! sel_node[2..2]) & (((w_data284w[1..1] & w_sel286w[0..0]) & (! (((w_data284w[0..0] & (! w_sel286w[1..1])) & (! w_sel286w[0..0])) # (w_sel286w[1..1] & (w_sel286w[0..0] # w_data284w[2..2]))))) # ((((w_data284w[0..0] & (! w_sel286w[1..1])) & (! w_sel286w[0..0])) # (w_sel286w[1..1] & (w_sel286w[0..0] # w_data284w[2..2]))) & (w_data284w[3..3] # (! w_sel286w[0..0])))))), ((sel_node[2..2] & (((w_data216w[1..1] & w_sel217w[0..0]) & (! (((w_data216w[0..0] & (! w_sel217w[1..1])) & (! w_sel217w[0..0])) # (w_sel217w[1..1] & (w_sel217w[0..0] # w_data216w[2..2]))))) # ((((w_data216w[0..0] & (! w_sel217w[1..1])) & (! w_sel217w[0..0])) # (w_sel217w[1..1] & (w_sel217w[0..0] # w_data216w[2..2]))) & (w_data216w[3..3] # (! w_sel217w[0..0]))))) # ((! sel_node[2..2]) & (((w_data215w[1..1] & w_sel217w[0..0]) & (! (((w_data215w[0..0] & (! w_sel217w[1..1])) & (! w_sel217w[0..0])) # (w_sel217w[1..1] & (w_sel217w[0..0] # w_data215w[2..2]))))) # ((((w_data215w[0..0] & (! w_sel217w[1..1])) & (! w_sel217w[0..0])) # (w_sel217w[1..1] & (w_sel217w[0..0] # w_data215w[2..2]))) & (w_data215w[3..3] # (! w_sel217w[0..0])))))));
	sel_ffs_wire[] = ( sel[2..0]);
	sel_node[] = ( sel_ffs_wire[2..2], sel[1..0]);
	w_data195w[] = ( B"00", data[15..15], data[12..12], data[9..9], data[6..6], data[3..3], data[0..0]);
	w_data215w[3..0] = w_data195w[3..0];
	w_data216w[3..0] = w_data195w[7..4];
	w_data264w[] = ( B"00", data[16..16], data[13..13], data[10..10], data[7..7], data[4..4], data[1..1]);
	w_data284w[3..0] = w_data264w[3..0];
	w_data285w[3..0] = w_data264w[7..4];
	w_data331w[] = ( B"00", data[17..17], data[14..14], data[11..11], data[8..8], data[5..5], data[2..2]);
	w_data351w[3..0] = w_data331w[3..0];
	w_data352w[3..0] = w_data331w[7..4];
	w_sel217w[1..0] = sel_node[1..0];
	w_sel286w[1..0] = sel_node[1..0];
	w_sel353w[1..0] = sel_node[1..0];
END;
--VALID FILE
